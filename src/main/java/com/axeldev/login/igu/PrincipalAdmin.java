

package com.axeldev.login.igu;

import com.axeldev.login.logica.Controladora;
import com.axeldev.login.logica.Usuario;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class PrincipalAdmin extends javax.swing.JFrame {

    Controladora control = null;
    Usuario user = null;
    
    /** Creates new form PrincipalAdmin */
    public PrincipalAdmin(Controladora control, Usuario user) {
        initComponents();
        this.control = control;
        this.user = user;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        containerPrincipaAdmin = new javax.swing.JPanel();
        labelTitleAdmin = new javax.swing.JLabel();
        containerTable = new javax.swing.JScrollPane();
        tableUsers = new javax.swing.JTable();
        btnCrearUser = new javax.swing.JButton();
        btnEditarUser = new javax.swing.JButton();
        btnBorrarUser = new javax.swing.JButton();
        btnActualizarTablaUser = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        txtAdmin = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        labelTitleAdmin.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        labelTitleAdmin.setText("Sistema administrador de Administradores");

        containerTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        containerTable.setViewportView(tableUsers);

        btnCrearUser.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCrearUser.setText("Crear Nuevo Usuario");
        btnCrearUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearUserActionPerformed(evt);
            }
        });

        btnEditarUser.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEditarUser.setText("Editar Usuario");
        btnEditarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarUserActionPerformed(evt);
            }
        });

        btnBorrarUser.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnBorrarUser.setText("Borrar Usuario");
        btnBorrarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarUserActionPerformed(evt);
            }
        });

        btnActualizarTablaUser.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnActualizarTablaUser.setText("Actualizar Tabla");
        btnActualizarTablaUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarTablaUserActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        txtAdmin.setEditable(false);
        txtAdmin.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtAdmin.setBorder(null);
        txtAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout containerPrincipaAdminLayout = new javax.swing.GroupLayout(containerPrincipaAdmin);
        containerPrincipaAdmin.setLayout(containerPrincipaAdminLayout);
        containerPrincipaAdminLayout.setHorizontalGroup(
            containerPrincipaAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPrincipaAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerPrincipaAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(containerTable, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTitleAdmin))
                .addGap(49, 49, 49)
                .addGroup(containerPrincipaAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAdmin)
                    .addComponent(btnActualizarTablaUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCrearUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditarUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBorrarUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        containerPrincipaAdminLayout.setVerticalGroup(
            containerPrincipaAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPrincipaAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerPrincipaAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTitleAdmin)
                    .addComponent(txtAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(containerPrincipaAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(containerTable)
                    .addGroup(containerPrincipaAdminLayout.createSequentialGroup()
                        .addComponent(btnCrearUser, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditarUser, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBorrarUser, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizarTablaUser, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPrincipaAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPrincipaAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarUserActionPerformed
        if (tableUsers.getRowCount() > 0) {
            if (tableUsers.getSelectedRow() != -1) {
                int id_user = Integer.parseInt(String.valueOf(tableUsers.getValueAt(tableUsers.getSelectedRow(), 0)));
                
                EdicionUsuarios editar = new EdicionUsuarios(control, id_user);
                editar.setVisible(true);
                editar.setLocationRelativeTo(null);

                cargarTabla();
            } else {
                mostrarMensaje("No selecciono ningun registro.", "Error", "Error al editar.");
            }
        } else {
            mostrarMensaje("La tabla esta vacia.", "Error", "Error al editar.");
        }
    }//GEN-LAST:event_btnEditarUserActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txtAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdminActionPerformed
        //txtAdmin.setText(user.getUsuario());
    }//GEN-LAST:event_txtAdminActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.txtAdmin.setText(user.getUsuario());
        cargarTabla();
    }//GEN-LAST:event_formWindowOpened

    private void btnActualizarTablaUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarTablaUserActionPerformed
        cargarTabla();
    }//GEN-LAST:event_btnActualizarTablaUserActionPerformed

    private void btnCrearUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearUserActionPerformed
        AltaUsuario altaUser = new AltaUsuario(control);
        altaUser.setVisible(true);
        altaUser.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnCrearUserActionPerformed

    private void btnBorrarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarUserActionPerformed
        if (tableUsers.getRowCount() > 0) {
            if (tableUsers.getSelectedRow() != -1) {
                int id_user = Integer.parseInt(String.valueOf(tableUsers.getValueAt(tableUsers.getSelectedRow(), 0)));
                control.borrarUsuario(id_user);

                mostrarMensaje("Se borro el usuario correctamente.", "Info", "Eliminación correcta.");

                cargarTabla();
            } else {
                mostrarMensaje("No selecciono ningun registro.", "Error", "Error al borrar.");
            }
        } else {
            mostrarMensaje("La tabla esta vacia.", "Error", "Error al borrar.");
        }
    }//GEN-LAST:event_btnBorrarUserActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarTablaUser;
    private javax.swing.JButton btnBorrarUser;
    private javax.swing.JButton btnCrearUser;
    private javax.swing.JButton btnEditarUser;
    private javax.swing.JButton btnSalir;
    private javax.swing.JPanel containerPrincipaAdmin;
    private javax.swing.JScrollPane containerTable;
    private javax.swing.JLabel labelTitleAdmin;
    private javax.swing.JTable tableUsers;
    private javax.swing.JTextField txtAdmin;
    // End of variables declaration//GEN-END:variables

    private void cargarTabla() {
        DefaultTableModel modeloTabla = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        String titulos[] = {
            "Id",
            "Nombre",
            "Rol"
        };
        modeloTabla.setColumnIdentifiers(titulos);

        List<Usuario> usuarios = control.traerUsuarios();
        if (usuarios != null) {
            for (Usuario usuario : usuarios) {
                Object[] objeto = {
                    usuario.getId(),
                    usuario.getUsuario(),
                    usuario.getRol().getNombre()
                };
                modeloTabla.addRow(objeto);
            }
        }

        tableUsers.setModel(modeloTabla);
    }
    
    public void mostrarMensaje(String mensaje, String tipo, String titulos) {
        JOptionPane optionPane = new JOptionPane(mensaje);
        if (tipo.equals("Info")) {
            optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);
        } else if (tipo.equals("Error")) {
            optionPane.setMessageType(JOptionPane.ERROR_MESSAGE);
        }
        JDialog dialog = optionPane.createDialog(titulos);
        dialog.setAlwaysOnTop(true);
        dialog.setVisible(true);
    }
    
}
